# CS180
Group 37: Project 5 (Parallel)

How to Compile/Run this Project:

For all files, only use the Final folder and the Test Case folders. All other folders were older version of our code and may not represent the true functionality.

First, you need to compile the ProfileServer class which serves as our server and this will constantly be on. 
This also launches any stored user data such as account, profile and friends list information.
Then, compile ProfileClient class.
While compiling these two classes, all other classes will be automatically compiled.
Finally, run ProfileClient class.

For simultaneous users, open a new terminal and run ProfileClient again.


Submission Details:

Student : Submitted Report on Brightspace

Student : Submitted Vocareum Workspace

Student : Submitted Video Presentation


Detailed Descriptions of Each Class:

Profile:
This class is for Profile object. One Profile object have information for one user account. 
In addition to basic getter & setter and toString & equals methods, we have methods to send, accept, remove friend request and unfriend here. 
By adding and removing the friend’s profile in sentFriendRequest list (from me to him), receivedFriendRequest list (from him to me) and friend list, we perform those functions. 
This is the basic unit of our program and methods here will be called inside various codes whenever needed. 
However, methods that are editing the profile, including setter methods, will only performed within the server class.

Authentication:
This class contains and constructed by the ArrayList of Profile objects and perform methods to get or edit the lists and Profile objects inside it. 
There is one Authentication object in the server and functions in the server will call the methods in the Authentication class to perform the functions.

ProfileServer:
This is a multi-threaded server class for our program. When socket is accepted, new thread starts.
In the thread, Server reads what strings were passed by the client. 
The first 3 line is functions, username and password. According to the ‘function’ String, Server performs corresponding functions.

ProfileClient:
This is a client class which runs the MergedGUI object and contains methods to send the request of functions to the server. 
In these methods, client send strings to the server to request an action within server. 
The actions include adding, editing or getting information in the server.

OccupiedProfileException:
This exception is thrown when username and password is occupied when creating a profile inside the Authentication object.

ProfileNotFoundException:
This exception is thrown when we cannot find a profile in the Authentication object.

MergedGUI:
This is final GUI class that all frames are merged. The user is able to perform actions throw this GUI, and corresponding methods of Client class will be called. 
Especially there is a function to refresh by every 5 seconds by getting users’ list at the server.



Descriptions of Testing Done:

Descriptions of the testing done on each class. 
For GUI testing, provide step-by-step guidance on the tests performed. 

Tested modifiers, return types, parameter types, and whether there were any throws

Each method would have a correct and incorrect test. The correct test would test the method with the correct return types, 
modifiers, parameter types, and whether there were any throws. The incorrect Test would test the main components of the method
so it tests the incorrect return types and parameters then returns true if the method doesn't have these parameters.

If the method does not have the outputs the test class is expecting at any point, a fail message will be printed with a
description of why the test failed.

For the GUI, to test making an account. The user needs to trun the program and after clicking "OK" in the welcome message they
need to click the button on the bottom that says "Create New Account" and enter your preferred username and password. You then will
be brought to the Registration Form where you are required to fill out your information. After clicking "Sumbit", you are then brought
to the homepage where your account is now created!

For the GUI, to test sending a friend request. The user will run the program and login using their username and password. Once they are
brought to the main menu, the user can click a profile from the drop down menu and click the button on the bottom that states "Select Profile".
This will then take you to the given users profile. If the profile isn't a friend of the user already then a button labeled "Send Friend Request"
will be at the top. Once this is clicked, a confirmation message will be displayed. Once the user of the profile accepts the friend request by
clicking the "accept" button on your profile, then the program will alert you that you both are now friends.

For the GUI, to test editing/deleting an account. Once the user is logged in, at the main menu, there is a button on the button labeled 
"Edit Your Profile". Once this is clicked, it will take the user to the Registration form where they can edit any of their information. This is also
where the user can delete their account by clicking the "Delete!" button on the bottom of the form. This will delete all user information from the app.





